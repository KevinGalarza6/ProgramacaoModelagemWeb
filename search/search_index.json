{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introdu\u00e7\u00e3o","text":"<p>Documenta\u00e7\u00e3o geral dos assuntos tratados na aula de Program\u00e7\u00e3o e Modelagem para Web.</p>"},{"location":"Css/01-introducao/","title":"1 - Introdu\u00e7\u00e3o ao CSS","text":"<ul> <li>O que \u00e9 CSS: Defini\u00e7\u00e3o e hist\u00f3ria.</li> <li>Estrutura b\u00e1sica de um arquivo CSS.</li> <li>Inserindo CSS em HTML: Inline, interno (internal) e externo (external).</li> <li>Selectores b\u00e1sicos: Elemento, classe e ID.</li> <li>Propriedades e valores.</li> <li>Pr\u00e1tica: Aplicar estilo b\u00e1sico a uma p\u00e1gina HTML simples</li> </ul>"},{"location":"Css/02-seletores-especificidade/","title":"2 - Selectores e Especificidade","text":"<p>Objetivo: Explorar a l\u00f3gica dos selectores e a hierarquia de estilos. Conte\u00fado: Revis\u00e3o dos selectores b\u00e1sicos. Selectores avan\u00e7ados: Agrupamento, descendente, filho, adjacente e general sibling. Especificidade: Como CSS decide qual estilo aplicar. Heran\u00e7a de propriedades. Pr\u00e1tica: Criar uma p\u00e1gina HTML com m\u00faltiplos estilos aplicados, explorando especificidade.</p>"},{"location":"Css/03-cores-e-unidades/","title":"3 - Cores e Unidades","text":"<p>Objetivo: Aplicar cores e diferentes unidades de medida no CSS. Conte\u00fado: Unidades de medida: Absolutas (px, cm) vs. relativas (em, rem, %, vw, vh). Cores em CSS: Nomeadas, HEX, RGB, RGBA, HSL e HSLA. Transpar\u00eancia e opacidade. Gradientes lineares e radiais. Pr\u00e1tica: Criar uma paleta de cores para um site fict\u00edcio, aplicando gradientes e opacidades.</p>"},{"location":"Css/04-tipografia/","title":"4 - Tipografia","text":"<p>Objetivo: Explorar como estilizar texto e escolher fontes adequadas. Conte\u00fado: Fontes web: Font-family, fallback fonts. Google Fonts e fontes personalizadas. Propriedades tipogr\u00e1ficas: Tamanho, altura da linha (line-height), espa\u00e7amento entre letras (letter-spacing) e entre palavras (word-spacing). Estiliza\u00e7\u00e3o de texto: Negrito, it\u00e1lico, sublinhado, alinhamento, decora\u00e7\u00e3o e transforma\u00e7\u00e3o. Pr\u00e1tica: Criar um layout de texto para um artigo, explorando fontes e estilos.</p>"},{"location":"Css/05-box-model-e-layout/","title":"5 - Box Model e Layout","text":"<p>Objetivo: Apresentar o Box Model e como ele influencia o layout de uma p\u00e1gina. Conte\u00fado: Box Model: Margem (margin), borda (border), padding, conte\u00fado. Box-sizing: Content-box vs. border-box. Display: Block, inline, inline-block. Manipula\u00e7\u00e3o de largura e altura. Pr\u00e1tica: Criar um layout simples aplicando conceitos do Box Model e do display.</p>"},{"location":"Css/06-flexbox/","title":"6 - Flexbox","text":"<p>Objetivo: Utilizar o Flexbox para criar layouts flex\u00edveis e responsivos. Conte\u00fado: Conceito de Flexbox. Container flex e itens flex. Propriedades do container: flex-direction, justify-content, align-items, flex-wrap. Propriedades dos itens: flex-grow, flex-shrink, flex-basis, align-self. Pr\u00e1tica: Criar um layout de galeria de imagens utilizando Flexbox.</p>"},{"location":"Css/07-grid-layout/","title":"7 - Grid Layout","text":"<p>Objetivo: Apresentar o CSS Grid e suas capacidades para cria\u00e7\u00e3o de layouts complexos. Conte\u00fado: Introdu\u00e7\u00e3o ao CSS Grid. Containers e itens de grid. Definindo colunas e linhas: grid-template-columns, grid-template-rows. \u00c1reas de grid e alinhamento de itens. Pr\u00e1tica: Desenvolver um layout de p\u00e1gina com cabe\u00e7alho, conte\u00fado principal e rodap\u00e9 usando CSS Grid.</p>"},{"location":"Css/08-estilizacao-avancada-e-animacoes/","title":"8 - Estiliza\u00e7\u00e3o Avan\u00e7ada e Anima\u00e7\u00f5es","text":""},{"location":"Css/08-estilizacao-avancada-e-animacoes/#1-pseudo-classes-e-pseudo-elementos","title":"1. Pseudo-classes e Pseudo-elementos","text":""},{"location":"Css/08-estilizacao-avancada-e-animacoes/#pseudo-classes","title":"Pseudo-classes","text":"<p>Pseudo-classes s\u00e3o palavras-chave que podem ser adicionadas a seletores para especificar um estado especial do elemento. Elas s\u00e3o usadas para estilizar elementos com base em seu estado din\u00e2mico.</p> <p>Exemplos:</p> <ul> <li>:hover: Aplica estilos a um elemento quando o mouse est\u00e1 sobre ele.</li> <li>:focus: Aplica estilos a um elemento que est\u00e1 em foco, como um campo de formul\u00e1rio selecionado.</li> </ul> <pre><code>/* Exemplo: Muda a cor de fundo de um bot\u00e3o quando o mouse passa por cima */\nbutton:hover {\n  background-color: #555;\n}\n</code></pre>"},{"location":"Css/08-estilizacao-avancada-e-animacoes/#pseudo-elementos","title":"Pseudo-elementos","text":"<p>Pseudo-elementos permitem estilizar partes espec\u00edficas de um elemento, como a primeira linha ou a primeira letra de um par\u00e1grafo.</p> <p>Exemplos de pseudo-elementos:</p> <ul> <li>::before: Insere antes do conte\u00fado de um elemento.</li> <li>::after: Insere depois do conte\u00fado de um elemento.</li> <li>::first-letter: Aplica estilos \u00e0 primeira letra de um elemento.</li> <li>::first-line: Aplica estilos a primeira linha de um elemento.</li> </ul> <pre><code>/* A primeira linha de todo elemento &lt;p&gt;. */\np::first-line {\n  color: blue;\n  text-transform: uppercase;\n}\n</code></pre>"},{"location":"Css/08-estilizacao-avancada-e-animacoes/#2-animacoes-basicas-keyframes-animation-transition","title":"2. Anima\u00e7\u00f5es B\u00e1sicas: <code>@keyframes</code>, <code>animation</code>, <code>transition</code>","text":""},{"location":"Css/08-estilizacao-avancada-e-animacoes/#keyframes","title":"@keyframes","text":"<p>Define as etapas intermedi\u00e1rias de uma anima\u00e7\u00e3o CSS, permitindo criar anima\u00e7\u00f5es complexas.</p> <pre><code>@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n</code></pre>"},{"location":"Css/08-estilizacao-avancada-e-animacoes/#animation","title":"animation","text":"<p>A propriedade <code>animation</code> aplica uma anima\u00e7\u00e3o a um elemento, utilizando as etapas definidas em <code>@keyframes</code>.</p> <pre><code>/* Exemplo: Aplica a anima\u00e7\u00e3o de fadeIn (criada no exemplo anterior) a uma div */\ndiv {\n  animation: fadeIn 2s ease-in-out;\n}\n</code></pre>"},{"location":"Css/08-estilizacao-avancada-e-animacoes/#transition","title":"transition","text":"<p>Permite a transi\u00e7\u00e3o suave entre diferentes estados de um elemento (como mudar a cor de fundo ao passar o mouse).</p> <pre><code>/* Exemplo: Transi\u00e7\u00e3o suave na cor de fundo de um bot\u00e3o */\nbutton {\n  background-color: #333;\n  transition: background-color 0.3s ease;\n}\n\nbutton:hover {\n  background-color: #555;\n}\n</code></pre>"},{"location":"Css/08-estilizacao-avancada-e-animacoes/#3-efeitos-de-hover-e-foco","title":"3. Efeitos de Hover e Foco","text":""},{"location":"Css/08-estilizacao-avancada-e-animacoes/#efeito-de-hover","title":"Efeito de Hover","text":"<p>O efeito de hover \u00e9 aplicado quando o usu\u00e1rio passa o mouse sobre um elemento. Combinado com <code>transition</code>, o efeito se torna suave e agrad\u00e1vel.</p> <pre><code>/* Exemplo: Altera a cor de um link ao passar o mouse */\na {\n  color: #000;\n  transition: color 0.2s;\n}\n\na:hover {\n  color: #f00;\n}\n</code></pre>"},{"location":"Css/08-estilizacao-avancada-e-animacoes/#efeito-de-foco","title":"Efeito de Foco","text":"<p>O efeito de foco \u00e9 ativado quando um elemento, como um campo de formul\u00e1rio, est\u00e1 em foco, geralmente ap\u00f3s ser clicado ou acessado via teclado.</p> <pre><code>/* Exemplo: Altera a borda de um campo de input quando em foco */\ninput:focus {\n  border-color: #00f;\n  outline: none;\n}\n</code></pre>"},{"location":"Css/08-estilizacao-avancada-e-animacoes/#4-transicoes-suaves-e-animacoes-personalizadas","title":"4. Transi\u00e7\u00f5es Suaves e Anima\u00e7\u00f5es Personalizadas","text":""},{"location":"Css/08-estilizacao-avancada-e-animacoes/#transicoes-suaves","title":"Transi\u00e7\u00f5es Suaves","text":"<p>As transi\u00e7\u00f5es suaves criam uma experi\u00eancia de usu\u00e1rio mais fluida ao mudar o estado de um elemento.</p> <pre><code>/* Exemplo: Transi\u00e7\u00e3o suave em um bot\u00e3o */\nbutton {\n  background-color: #008cba;\n  transition: background-color 0.4s ease;\n}\n\nbutton:hover {\n  background-color: #005f73;\n}\n</code></pre>"},{"location":"Css/08-estilizacao-avancada-e-animacoes/#animacoes-personalizadas","title":"Anima\u00e7\u00f5es Personalizadas","text":"<p>Anima\u00e7\u00f5es personalizadas permitem que voc\u00ea crie movimentos mais complexos e intera\u00e7\u00f5es ricas com o usu\u00e1rio.</p> <pre><code>@keyframes slideIn {\n  from {\n    transform: translateX(-100%);\n  }\n  to {\n    transform: translateX(0);\n  }\n}\n\n.box {\n  animation: slideIn 1s ease-out;\n}\n</code></pre>"},{"location":"Css/08-estilizacao-avancada-e-animacoes/#pratica","title":"Pr\u00e1tica","text":"P\u00e1gina Inicial Sobre Servi\u00e7os Contato <p>O exemplo acima possui o seguinte html:</p> <pre><code>&lt;html&gt;\n  &lt;style&gt;\n    .menu {\n      background-color: #333;\n      padding: 10px;\n      text-align: center;\n    }\n\n    .menu a {\n      color: #fff;\n      padding: 10px;\n      transition: background-color 0.3s;\n    }\n\n    .menu a:hover {\n      background-color: #555;\n    }\n  &lt;/style&gt;\n  &lt;body&gt;\n    &lt;nav class=\"menu\"&gt;\n      &lt;a href=\"##\"&gt;P\u00e1gina Inicial&lt;/a&gt;\n      &lt;a href=\"##\"&gt;Sobre&lt;/a&gt;\n      &lt;a href=\"##\"&gt;Servi\u00e7os&lt;/a&gt;\n      &lt;a href=\"##\"&gt;Contato&lt;/a&gt;\n    &lt;/nav&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Css/09-responsividade-e-media-queries/","title":"9 - Responsividade e Media Queries","text":""},{"location":"Css/09-responsividade-e-media-queries/#1-conceito-de-design-responsivo","title":"1. Conceito de Design Responsivo","text":"<p>O design responsivo \u00e9 uma abordagem de design que visa garantir que o layout e o conte\u00fado de um site sejam exibidos de forma otimizada em uma variedade de dispositivos e tamanhos de tela. Em vez de criar vers\u00f5es separadas para desktop e dispositivos m\u00f3veis, o design responsivo ajusta automaticamente o layout com base nas dimens\u00f5es da tela.</p> <p>Vantagens:</p> <ul> <li>Melhora a experi\u00eancia do usu\u00e1rio em diferentes dispositivos.</li> <li>Reduz a necessidade de manuten\u00e7\u00e3o, pois um \u00fanico design se adapta a v\u00e1rios tamanhos de tela.</li> <li>Melhora o SEO, pois motores de busca favorecem sites com design responsivo.</li> </ul>"},{"location":"Css/09-responsividade-e-media-queries/#2-media-queries-sintaxe-e-uso","title":"2. Media Queries: Sintaxe e Uso","text":"<p>As media queries s\u00e3o uma ferramenta fundamental no design responsivo, permitindo que diferentes estilos CSS sejam aplicados com base nas caracter\u00edsticas do dispositivo, como largura da tela, altura, resolu\u00e7\u00e3o, etc.</p>"},{"location":"Css/09-responsividade-e-media-queries/#sintaxe-basica","title":"Sintaxe B\u00e1sica","text":"<pre><code>@media (min-width: 768px) {\n  /* Estilos aplicados para dispositivos com largura m\u00ednima de 768px */\n  body {\n    font-size: 18px;\n  }\n}\n</code></pre>"},{"location":"Css/09-responsividade-e-media-queries/#uso-comum","title":"Uso Comum","text":"<ul> <li>min-width e max-width: Aplica estilos com base na largura m\u00ednima ou m\u00e1xima da tela.</li> <li>orientation: Detecta a orienta\u00e7\u00e3o do dispositivo (paisagem ou retrato).</li> <li>resolution: Aplica estilos com base na densidade de pixels do dispositivo.</li> </ul> <pre><code>/* Exemplo: Ajustar o layout para telas pequenas */\n@media (max-width: 600px) {\n  .container {\n    flex-direction: column;\n  }\n}\n</code></pre>"},{"location":"Css/09-responsividade-e-media-queries/#3-layouts-fluidos-e-imagens-responsivas","title":"3. Layouts Fluidos e Imagens Responsivas","text":""},{"location":"Css/09-responsividade-e-media-queries/#layouts-fluidos","title":"Layouts Fluidos","text":"<p>Layouts fluidos utilizam unidades relativas, como porcentagens, em vez de unidades fixas (como pixels), permitindo que os elementos se ajustem de acordo com o tamanho da tela.</p> <pre><code>.container {\n  width: 100%;\n  padding: 2%;\n}\n</code></pre>"},{"location":"Css/09-responsividade-e-media-queries/#imagens-responsivas","title":"Imagens Responsivas","text":"<p>Imagens responsivas se ajustam automaticamente ao tamanho do seu cont\u00eainer, garantindo que n\u00e3o ultrapassem as dimens\u00f5es da tela.</p> <pre><code>img {\n  max-width: 100%;\n  height: auto;\n}\n</code></pre>"},{"location":"Css/09-responsividade-e-media-queries/#4-unidades-relativas-para-responsividade","title":"4. Unidades Relativas para Responsividade","text":""},{"location":"Css/09-responsividade-e-media-queries/#unidades-relativas","title":"Unidades Relativas","text":"<p>Unidades relativas, como <code>%</code>, <code>em</code>, <code>rem</code>, <code>vw</code>, e <code>vh</code>, s\u00e3o cruciais para a cria\u00e7\u00e3o de layouts responsivos, pois se adaptam ao tamanho do cont\u00eainer ou viewport.</p> <ul> <li>%: Relativa ao elemento pai.</li> <li>em: Relativa ao tamanho da fonte do elemento pai.</li> <li>rem: Relativa ao tamanho da fonte raiz (geralmente o <code>html</code>).</li> <li>vw: 1% da largura do viewport.</li> <li>vh: 1% da altura do viewport.</li> </ul> <pre><code>.container {\n  width: 80vw; /* 80% da largura do viewport */\n  font-size: 1.2rem; /* 1.2 vezes o tamanho da fonte raiz */\n}\n</code></pre>"},{"location":"Css/09-responsividade-e-media-queries/#pratica","title":"Pr\u00e1tica","text":"P\u00e1gina Inicial Sobre Servi\u00e7os Contato <p>O exemplo acima possui o seguinte html:</p> <pre><code>&lt;html&gt;\n  &lt;style&gt;\n    .menu {\n      background-color: #333;\n      padding: 10px;\n      text-align: center;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .menu a {\n      color: #fff;\n      padding: 10px;\n      transition: background-color 0.3s;\n    }\n\n    .menu a:hover {\n      background-color: #555;\n    }\n\n    @media (min-width: 1092px) {\n      .menu {\n        flex-direction: row;\n        justify-content: center;\n      }\n    }\n  &lt;/style&gt;\n  &lt;body&gt;\n    &lt;nav class=\"menu\"&gt;\n      &lt;a href=\"##\"&gt;P\u00e1gina Inicial&lt;/a&gt;\n      &lt;a href=\"##\"&gt;Sobre&lt;/a&gt;\n      &lt;a href=\"##\"&gt;Servi\u00e7os&lt;/a&gt;\n      &lt;a href=\"##\"&gt;Contato&lt;/a&gt;\n    &lt;/nav&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Css/10-boas-praticas-e-otimizacao/","title":"10 - Boas Pr\u00e1ticas e Otimiza\u00e7\u00e3o","text":""},{"location":"Css/10-boas-praticas-e-otimizacao/#1-estruturacao-e-organizacao-de-css-modulos-e-bem-block-element-modifier","title":"1. Estrutura\u00e7\u00e3o e Organiza\u00e7\u00e3o de CSS: M\u00f3dulos e BEM (Block Element Modifier)","text":""},{"location":"Css/10-boas-praticas-e-otimizacao/#modulos-css","title":"M\u00f3dulos CSS","text":"<p>A modulariza\u00e7\u00e3o do CSS envolve a divis\u00e3o do c\u00f3digo em arquivos menores e reutiliz\u00e1veis. Isso ajuda a manter o c\u00f3digo organizado, reduz a duplica\u00e7\u00e3o e facilita a manuten\u00e7\u00e3o.</p> <ul> <li>M\u00f3dulos CSS: Arquivos separados que cont\u00eam estilos espec\u00edficos para uma parte da interface, como bot\u00f5es, formul\u00e1rios ou layouts.</li> </ul>"},{"location":"Css/10-boas-praticas-e-otimizacao/#bem-block-element-modifier","title":"BEM (Block Element Modifier)","text":"<p>BEM \u00e9 uma metodologia que facilita a cria\u00e7\u00e3o de componentes reutiliz\u00e1veis e mant\u00e9m a consist\u00eancia no c\u00f3digo CSS. Ele utiliza uma conven\u00e7\u00e3o de nomenclatura para classes CSS.</p> <ul> <li>Bloco: Representa um cont\u00eainer ou componente independente (<code>.menu</code>).</li> <li>Elemento: Representa uma parte do bloco, que n\u00e3o faz sentido fora dele (<code>.menu__item</code>).</li> <li>Modificador: Representa uma varia\u00e7\u00e3o ou estado do bloco ou elemento (<code>.menu__item--active</code>).</li> </ul> <pre><code>/* Bloco */\n.button {\n  background-color: blue;\n  color: white;\n}\n\n/* Modificador */\n.button--large {\n  padding: 10px 20px;\n}\n</code></pre>"},{"location":"Css/10-boas-praticas-e-otimizacao/#2-minificacao-e-compressao-de-arquivos-css","title":"2. Minifica\u00e7\u00e3o e Compress\u00e3o de Arquivos CSS","text":"<p>A minifica\u00e7\u00e3o \u00e9 o processo de remover espa\u00e7os em branco, coment\u00e1rios e outros caracteres desnecess\u00e1rios de arquivos CSS para reduzir seu tamanho. Isso melhora o tempo de carregamento da p\u00e1gina.</p> <p>Ferramentas de Minifica\u00e7\u00e3o</p> <ul> <li>CSSNano: Uma ferramenta que otimiza o CSS para produ\u00e7\u00e3o, reduzindo seu tamanho.</li> <li>UglifyCSS: Outra ferramenta para minificar CSS.</li> </ul> <pre><code># Exemplo de minifica\u00e7\u00e3o usando CSSNano\ncssnano styles.css styles.min.css\n</code></pre> <p>A compress\u00e3o de arquivos CSS envolve o uso de algoritmos de compacta\u00e7\u00e3o (como Gzip) para reduzir ainda mais o tamanho do arquivo transferido entre o servidor e o navegador.</p>"},{"location":"Css/10-boas-praticas-e-otimizacao/#3-ferramentas-de-desenvolvimento-devtools-linting-pre-processadores-sass","title":"3. Ferramentas de Desenvolvimento: DevTools, Linting, Pr\u00e9-processadores (Sass)","text":""},{"location":"Css/10-boas-praticas-e-otimizacao/#devtools","title":"DevTools","text":"<p>Os DevTools dos navegadores s\u00e3o essenciais para depurar e testar o CSS diretamente na p\u00e1gina web. Eles permitem inspecionar elementos, modificar estilos e ver as mudan\u00e7as em tempo real.</p> <ul> <li>Inspecionar Elemento: Ver e editar o CSS de um elemento espec\u00edfico.</li> <li>Network: Monitorar o carregamento de arquivos CSS e outros recursos.</li> </ul>"},{"location":"Css/10-boas-praticas-e-otimizacao/#linting","title":"Linting","text":"<p>Linting \u00e9 o processo de analisar o c\u00f3digo para encontrar problemas de sintaxe ou estilo que podem levar a bugs ou inconsist\u00eancias. Ferramentas como Stylelint ajudam a garantir que o c\u00f3digo siga padr\u00f5es estabelecidos.</p> <pre><code># Exemplo de uso do Stylelint\nstylelint 'src/**/*.css' --fix\n</code></pre>"},{"location":"Css/10-boas-praticas-e-otimizacao/#pre-processadores-sass","title":"Pr\u00e9-processadores (Sass)","text":"<p>Sass \u00e9 um pr\u00e9-processador CSS que permite o uso de vari\u00e1veis, aninhamento, mixins, e outras funcionalidades que n\u00e3o est\u00e3o dispon\u00edveis no CSS puro. O c\u00f3digo Sass \u00e9 compilado em CSS para uso em produ\u00e7\u00e3o.</p> <pre><code>$primary-color: blue;\n\n.button {\n  background-color: $primary-color;\n  color: white;\n\n  &amp;:hover {\n    background-color: darken($primary-color, 10%);\n  }\n}\n</code></pre>"},{"location":"Css/10-boas-praticas-e-otimizacao/#4-acessibilidade-em-css","title":"4. Acessibilidade em CSS","text":"<p>Acessibilidade em CSS refere-se a t\u00e9cnicas para garantir que o conte\u00fado web seja acess\u00edvel a todos, incluindo pessoas com defici\u00eancias. Isso envolve considerar como os estilos afetam a navega\u00e7\u00e3o por teclado, leitores de tela e outras tecnologias assistivas.</p>"},{"location":"Css/10-boas-praticas-e-otimizacao/#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ul> <li>Contraste de Cores: Assegure que h\u00e1 contraste suficiente entre o texto e o fundo para facilitar a leitura.</li> <li>Foco Vis\u00edvel: Garanta que os elementos interativos tenham um estado de foco vis\u00edvel.</li> <li>Tamanhos Flex\u00edveis: Use unidades relativas para que os usu\u00e1rios possam redimensionar o texto sem quebrar o layout.</li> </ul> <pre><code>/* Exemplo de foco vis\u00edvel */\na:focus {\n  outline: 2px solid #00f;\n}\n</code></pre>"},{"location":"Css/10-boas-praticas-e-otimizacao/#ferramentas-de-acessibilidade","title":"Ferramentas de Acessibilidade","text":"<ul> <li>Axe DevTools: Extens\u00e3o para navegadores que ajuda a identificar e corrigir problemas de acessibilidade.</li> <li>WAVE: Outra ferramenta popular para avalia\u00e7\u00e3o de acessibilidade.</li> </ul>"},{"location":"Css/10-boas-praticas-e-otimizacao/#pratica","title":"Pr\u00e1tica","text":"<p>Utilizando o html que foi criado como pr\u00e1tica em 9 - Responsividade e Media Queries, foram implementadas algumas melhorias.</p> <ul> <li>BEM (Block Element Modifier): Alterado a classe dos itens do menu para <code>menu__item</code>.</li> <li>M\u00f3dulos: O CSS foi organizado de maneira modular, com estilos espec\u00edficos para o bloco <code>.menu</code> e seus elementos <code>.menu__item</code>.</li> <li>Acessibilidade: Adicionado ao <code>&lt;nav&gt;</code> e aos <code>&lt;a&gt;</code> o <code>aria-label</code> melhorando a acessibilidade para usu\u00e1rios de tecnologias assistivas.</li> </ul> P\u00e1gina Inicial Sobre Servi\u00e7os Contato <p>O exemplo acima possui o seguinte html:</p> <pre><code>&lt;html&gt;\n  &lt;style&gt;\n    .menu {\n      background-color: #333;\n      padding: 10px;\n      text-align: center;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .menu__item {\n      color: #fff;\n      padding: 10px;\n      transition: background-color 0.3s;\n    }\n\n    .menu__item:hover {\n      background-color: #555;\n    }\n\n    @media (min-width: 1092px) {\n      .menu {\n        flex-direction: row;\n        justify-content: center;\n      }\n    }\n  &lt;/style&gt;\n  &lt;body&gt;\n    &lt;nav class=\"menu\" aria-label=\"Menu de navega\u00e7\u00e3o\"&gt;\n      &lt;a href=\"##\" class=\"menu__item\" aria-label=\"Ir para a p\u00e1gina inicial\"\n        &gt;P\u00e1gina Inicial&lt;/a\n      &gt;\n      &lt;a href=\"##\" class=\"menu__item\" aria-label=\"Ir para a se\u00e7\u00e3o Sobre\"\n        &gt;Sobre&lt;/a\n      &gt;\n      &lt;a href=\"##\" class=\"menu__item\" aria-label=\"Ir para a se\u00e7\u00e3o de Servi\u00e7os\"\n        &gt;Servi\u00e7os&lt;/a\n      &gt;\n      &lt;a href=\"##\" class=\"menu__item\" aria-label=\"Ir para a se\u00e7\u00e3o de Contato\"\n        &gt;Contato&lt;/a\n      &gt;\n    &lt;/nav&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"}]}